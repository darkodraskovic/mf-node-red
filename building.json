[
    {
        "id": "4ef39ed5.f8ebe",
        "type": "tab",
        "label": "Building",
        "disabled": false,
        "info": ""
    },
    {
        "id": "216b9ff1.d2b19",
        "type": "group",
        "z": "4ef39ed5.f8ebe",
        "name": "floors",
        "style": {
            "fill": "#b797cf",
            "label": true,
            "stroke": "#a4a4a4",
            "color": "#777777"
        },
        "nodes": [
            "4fb81551.c8bdbc",
            "fcb5d045.0fb0c"
        ],
        "x": 614,
        "y": 259,
        "w": 152,
        "h": 122
    },
    {
        "id": "97e26311.150bb",
        "type": "group",
        "z": "4ef39ed5.f8ebe",
        "name": "message",
        "style": {
            "stroke": "#a4a4a4",
            "label": true,
            "fill": "#ffff7f",
            "color": "#777777"
        },
        "nodes": [
            "918b9967.866538",
            "946dd2cc.a65bb"
        ],
        "x": 794,
        "y": 379,
        "w": 272,
        "h": 82
    },
    {
        "id": "b652ecb2.88315",
        "type": "group",
        "z": "4ef39ed5.f8ebe",
        "name": "payload",
        "style": {
            "fill": "#7fb7df",
            "label": true,
            "color": "#777777"
        },
        "nodes": [
            "8a8c3971.70a938",
            "41947a5e.bde8e4",
            "d2ff5baf.e81108",
            "63964d63.517b34"
        ],
        "x": 214,
        "y": 459,
        "w": 552,
        "h": 122
    },
    {
        "id": "ce2646f1.919c68",
        "type": "group",
        "z": "4ef39ed5.f8ebe",
        "name": "",
        "style": {
            "fill": "#c8e7a7",
            "label": true
        },
        "nodes": [
            "b3703d96.55e74",
            "1c0e33bd.82bd6c",
            "7365c100.37ce3"
        ],
        "x": 14,
        "y": 279,
        "w": 232,
        "h": 162
    },
    {
        "id": "b3703d96.55e74",
        "type": "inject",
        "z": "4ef39ed5.f8ebe",
        "g": "ce2646f1.919c68",
        "name": "temperature",
        "props": [
            {
                "p": "name",
                "v": "temperature",
                "vt": "str"
            },
            {
                "p": "payload"
            },
            {
                "p": "deltaTime",
                "v": "0.1",
                "vt": "num"
            },
            {
                "p": "count",
                "v": "3",
                "vt": "num"
            },
            {
                "p": "min",
                "v": "15",
                "vt": "num"
            },
            {
                "p": "max",
                "v": "40",
                "vt": "num"
            },
            {
                "p": "offLimitsProb",
                "v": "0.1",
                "vt": "str"
            },
            {
                "p": "unit",
                "v": "Celsius",
                "vt": "str"
            }
        ],
        "repeat": "3",
        "crontab": "",
        "once": true,
        "onceDelay": "1",
        "topic": "",
        "payload": "0",
        "payloadType": "num",
        "x": 140,
        "y": 320,
        "wires": [
            []
        ]
    },
    {
        "id": "d2ff5baf.e81108",
        "type": "function",
        "z": "4ef39ed5.f8ebe",
        "g": "b652ecb2.88315",
        "name": "compute_float",
        "func": "for (var i = 0; i < msg.count; i++) {\n    var offLimits = Math.random() < msg.offLimitsProb;\n    var range = msg.max - msg.min;\n    var val = msg.min + range * Math.random();\n    if (offLimits) {\n        var sign = Math.random() > 0.5 ? 1 : -1;\n        val = sign * range * Math.random() * msg.offLimitsProb;\n        if (sign < 0) val += msg.min;\n        else val += msg.max;\n    }\n    msg.payload[i] = val;\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 480,
        "y": 500,
        "wires": [
            [
                "8a8c3971.70a938"
            ]
        ]
    },
    {
        "id": "1c0e33bd.82bd6c",
        "type": "inject",
        "z": "4ef39ed5.f8ebe",
        "g": "ce2646f1.919c68",
        "name": "humidity",
        "props": [
            {
                "p": "name",
                "v": "humidity",
                "vt": "str"
            },
            {
                "p": "payload"
            },
            {
                "p": "count",
                "v": "1",
                "vt": "num"
            },
            {
                "p": "deltaTime",
                "v": "0.5",
                "vt": "num"
            },
            {
                "p": "min",
                "v": "30",
                "vt": "num"
            },
            {
                "p": "max",
                "v": "70",
                "vt": "num"
            },
            {
                "p": "offLimitsProb",
                "v": "0.2",
                "vt": "str"
            },
            {
                "p": "unit",
                "v": "percentage",
                "vt": "str"
            }
        ],
        "repeat": "5",
        "crontab": "",
        "once": true,
        "onceDelay": "1",
        "topic": "",
        "payload": "0",
        "payloadType": "num",
        "x": 120,
        "y": 360,
        "wires": [
            []
        ]
    },
    {
        "id": "7365c100.37ce3",
        "type": "inject",
        "z": "4ef39ed5.f8ebe",
        "g": "ce2646f1.919c68",
        "name": "occupancy",
        "props": [
            {
                "p": "name",
                "v": "occupancy",
                "vt": "str"
            },
            {
                "p": "count",
                "v": "4",
                "vt": "num"
            },
            {
                "p": "deltaTime",
                "v": "0.3",
                "vt": "num"
            },
            {
                "p": "payload"
            },
            {
                "p": "trueProb",
                "v": "0.7",
                "vt": "str"
            }
        ],
        "repeat": "4",
        "crontab": "",
        "once": true,
        "onceDelay": "1",
        "topic": "",
        "payload": "true",
        "payloadType": "bool",
        "x": 130,
        "y": 400,
        "wires": [
            [
                "63964d63.517b34"
            ]
        ]
    },
    {
        "id": "41947a5e.bde8e4",
        "type": "function",
        "z": "4ef39ed5.f8ebe",
        "g": "b652ecb2.88315",
        "name": "compute_bool",
        "func": "for (var i = 0; i < msg.count; i++) {\n    msg.payload[i] = Math.random() < msg.trueProb ? true : false;\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 480,
        "y": 540,
        "wires": [
            [
                "8a8c3971.70a938"
            ]
        ]
    },
    {
        "id": "8a8c3971.70a938",
        "type": "function",
        "z": "4ef39ed5.f8ebe",
        "g": "b652ecb2.88315",
        "name": "create_payload",
        "func": "for (var i = 0; i < msg.count; i++) {\n    payload = {\n        \"n\": msg.name, \n        \"u\": msg.unit,\n        \"t\": new Date().getTime() / 1000 + msg.deltaTime * i,\n    };\n    \n    var msgPayload = msg.payload[i]\n    switch(typeof(msgPayload)) {\n        case \"number\":\n            payload[\"v\"] = msgPayload;\n            break;    \n        case \"boolean\": \n            payload[\"bv\"] = msgPayload;\n            break;\n        case \"string\":\n            payload[\"sv\"] = msgPayload;\n            break;\n        default:\n            payload[\"v\"] = msgPayload;\n    }\n    \n    msg.payload[i] = payload;\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 660,
        "y": 520,
        "wires": [
            [
                "4fb81551.c8bdbc",
                "fcb5d045.0fb0c"
            ]
        ]
    },
    {
        "id": "6db8654d.d2cf2c",
        "type": "debug",
        "z": "4ef39ed5.f8ebe",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1030,
        "y": 320,
        "wires": []
    },
    {
        "id": "4fb81551.c8bdbc",
        "type": "change",
        "z": "4ef39ed5.f8ebe",
        "g": "216b9ff1.d2b19",
        "name": "floor_1",
        "rules": [
            {
                "t": "set",
                "p": "basename",
                "pt": "msg",
                "to": "floor_1",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "5e5819e2-7071-464f-a6f5-679e44cac694",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 690,
        "y": 300,
        "wires": [
            [
                "918b9967.866538"
            ]
        ]
    },
    {
        "id": "918b9967.866538",
        "type": "function",
        "z": "4ef39ed5.f8ebe",
        "g": "97e26311.150bb",
        "name": "topic",
        "func": "msg.payload.forEach(function(payload){\n    payload.basename = msg.basename;\n});\n\nvar topic = \"channels/\" + msg.topic + \"/messages/\";\nvar subtopic = msg.basename + \"/\" + msg.name;\nmsg.topic = topic + subtopic;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 870,
        "y": 420,
        "wires": [
            [
                "946dd2cc.a65bb"
            ]
        ]
    },
    {
        "id": "fcb5d045.0fb0c",
        "type": "change",
        "z": "4ef39ed5.f8ebe",
        "g": "216b9ff1.d2b19",
        "name": "floor_2",
        "rules": [
            {
                "t": "set",
                "p": "basename",
                "pt": "msg",
                "to": "floor_2",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "000af29e-a9f0-41c3-aa24-bc73c9c92ee4",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 690,
        "y": 340,
        "wires": [
            [
                "918b9967.866538"
            ]
        ]
    },
    {
        "id": "946dd2cc.a65bb",
        "type": "json",
        "z": "4ef39ed5.f8ebe",
        "g": "97e26311.150bb",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 990,
        "y": 420,
        "wires": [
            [
                "6db8654d.d2cf2c"
            ]
        ]
    },
    {
        "id": "63964d63.517b34",
        "type": "function",
        "z": "4ef39ed5.f8ebe",
        "g": "b652ecb2.88315",
        "name": "route_msg",
        "func": "msg.count = msg.count || 1;\nmsg.deltaTime = msg.deltaTime || 0;\n\n// https://nodered.org/docs/user-guide/writing-functions#multiple-outputs\nvar msgArray = [null, null]; // outputs\nswitch(typeof(msg.payload)) {\n    case \"number\": \n        msgArray[0] = msg; // send to output 1\n        break;\n    case \"boolean\":\n        msgArray[1] = msg; // send to output 2\n        break;\n    default:\n        msgArray[0] = msg;\n        break;    \n}\n\nmsg.payload = [] // SenML array;\n\nreturn msgArray;",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 310,
        "y": 520,
        "wires": [
            [
                "d2ff5baf.e81108"
            ],
            [
                "41947a5e.bde8e4"
            ]
        ]
    },
    {
        "id": "f3dfe3bf.71e62",
        "type": "template",
        "z": "4ef39ed5.f8ebe",
        "name": "",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "This is the payload: {{payload}} !",
        "output": "str",
        "x": 410,
        "y": 220,
        "wires": [
            []
        ]
    }
]